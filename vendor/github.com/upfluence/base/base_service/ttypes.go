// Autogenerated by Thrift Compiler (1.0.0-upfluence)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package base_service

import (
	"bytes"
	"fmt"
	"github.com/upfluence/base/version"
	"github.com/upfluence/thrift/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal
var _ = version.GoUnusedProtection__
var GoUnusedProtection__ int

type Status int64

const (
	Status_DEAD     Status = 0
	Status_STARTING Status = 1
	Status_ALIVE    Status = 2
	Status_STOPPING Status = 3
	Status_STOPPED  Status = 4
	Status_WARNING  Status = 5
)

func (p Status) String() string {
	switch p {
	case Status_DEAD:
		return "Status_DEAD"
	case Status_STARTING:
		return "Status_STARTING"
	case Status_ALIVE:
		return "Status_ALIVE"
	case Status_STOPPING:
		return "Status_STOPPING"
	case Status_STOPPED:
		return "Status_STOPPED"
	case Status_WARNING:
		return "Status_WARNING"
	}
	return "<UNSET>"
}

func StatusFromString(s string) (Status, error) {
	switch s {
	case "Status_DEAD":
		return Status_DEAD, nil
	case "Status_STARTING":
		return Status_STARTING, nil
	case "Status_ALIVE":
		return Status_ALIVE, nil
	case "Status_STOPPING":
		return Status_STOPPING, nil
	case "Status_STOPPED":
		return Status_STOPPED, nil
	case "Status_WARNING":
		return Status_WARNING, nil
	}
	return Status(0), fmt.Errorf("not a valid Status string")
}

func StatusPtr(v Status) *Status { return &v }
